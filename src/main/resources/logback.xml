<?xml version="1.0" encoding="UTF-8"?>
<configuration>

    <property name="HOME" value="C:/Code/webapps/dayiary/logs" />
    <property name="ARCHIVED" value="${HOME}/archived" />
    <property name="LOG_NAME" value="icia" />
        
    <appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!-- charset>UTF-8</charset -->
            <pattern>[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>

    <appender name="file" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${HOME}/${LOG_NAME}.log</file>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!-- charset>UTF-8</charset -->
            <pattern>[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>

        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${ARCHIVED}/${LOG_NAME}.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <maxFileSize>50MB</maxFileSize>
            <maxHistory>10</maxHistory>
            <!-- totalSizeCap>20GB</totalSizeCap -->
        </rollingPolicy>
        
        <!-- filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>DEBUG</level>
			<onMatch>ACCEPT</onMatch> 
			<onMismatch>DENY</onMismatch>
		</filter -->
    </appender>
    
    <logger name="com.icia" level="DEBUG" />
    <logger name="org.springframework" level="DEBUG" />
    <logger name="org.mybatis" level="INFO" />
    <logger name="com.zaxxer.hikari" level="WARN" />
    <logger name="jdbc" level="OFF" />
    <logger name="jdbc.sqlonly" level="OFF" /> <!-- SQL문만을 로그로 남기며, PreparedStatement일 경우 관련된 argument 값으로 대체된 SQL문이 보여진다.  -->
  	<logger name="jdbc.sqltiming" level="WARN" /> <!-- SQL문과 해당 SQL을 실행시키는데 수행된 시간 정보(milliseconds)를 포함한다.  -->
  	<logger name="jdbc.audit" level="OFF" /> <!-- ResultSet을 제외한 모든 JDBC 호출 정보를 로그로 남긴다. 많은 양의 로그가 생성되므로 특별히 JDBC 문제를 추적해야 할 필요가 있는 경우를 제외하고는 사용을 권장하지 않는다. -->
  	<logger name="jdbc.resultset" level="OFF" /> <!-- ResultSet을 포함한 모든 JDBC 호출 정보를 로그로 남기므로 매우 방대한 양의 로그가 생성된다.  -->
  	<logger name="jdbc.resultsettable" level="OFF" /> <!-- SQL 결과 조회된 데이터의 table을 로그로 남긴다. -->
  	<logger name="jdbc.connection" level="WARN" />
    
    <root level="DEBUG">
		<appender-ref ref="stdout" />
		<appender-ref ref="file" />
    </root>

</configuration>